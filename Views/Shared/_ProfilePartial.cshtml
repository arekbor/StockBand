@{
    string urlAvatar = string.Empty;
    var isAvatarUploaded = bool.Parse(User.FindFirst(x => x.Type == "IsAvatarUploaded").Value);
    if(isAvatarUploaded)
    {
        urlAvatar = $"{Context.Request.Scheme}://{Context.Request.Host}{Url.Action("streamavatar","account",new {name=User.FindFirst(x => x.Type == ClaimTypes.Name).Value, type=UserProfileImagesTypes.Avatar})}";
    }
}


<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" style="color:@User.FindFirst(x => x.Type == "Color").Value" href="#" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
        @if (isAvatarUploaded)
        {
            <img src="@urlAvatar" class="rounded-circle" style="display:inline-block; height:25px; width:25px;  margin: auto;" alt="Avatar" loading="lazy" />
        }
        else
        {
            <img src="~/img/default_avatar.jpg" class="rounded-circle" style="display:inline-block; height:25px; width:25px; margin: auto; object-fit:cover;" alt="Avatar"/>
        }
        @User.Identity.Name
    </a>
    <ul class="dropdown-menu dropdownCustom" aria-labelledby="dropdownMenuUserPanel">
        <li>
            <a class="dropdown-item" asp-controller="account" asp-action="profile" asp-route-name="@User.FindFirst(x => x.Type == ClaimTypes.Name).Value">Profile</a>
        </li>
        <li>
            <a class="dropdown-item" asp-controller="account" asp-action="userlog">Logs</a>
        </li>
        <li>
            <a class="dropdown-item" asp-controller="account" asp-action="usersettings">Settings</a>
        </li>
		<li>
            <a class="dropdown-item" asp-controller="account" asp-action="logout">Logout</a>
        </li>
    </ul>
</li>