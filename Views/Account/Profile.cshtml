@model UserDto
@inject IConfiguration _configuration
@inject ITrackService _trackService
@{
    ViewData["Title"] = @Model.Name;
    Layout = "_Layout";
    var urlActionContext = Url.ActionContext;
    var urlQuery = urlActionContext.HttpContext.Request;
    var acionName = urlActionContext.RouteData.Values["action"].ToString().ToLower();
    var isAuthorized = Model.Id == int.Parse(User.FindFirst(x => x.Type == ClaimTypes.NameIdentifier).Value);
    var isAdmin = User.IsInRole(UserRoles.Roles[1]);
    var controllerName = urlActionContext.RouteData.Values["controller"].ToString().ToLower();
    var urlAvatar = $"{Context.Request.Scheme}://{Context.Request.Host}{Url.Action("streamavatar","account",new {name=Model.Name, type=UserProfileImagesTypes.Avatar})}";
    var urlHeader = $"{Context.Request.Scheme}://{Context.Request.Host}{Url.Action("streamavatar","account",new {name=Model.Name, type=UserProfileImagesTypes.Header})}";
    var urlProfile = $"{Context.Request.Scheme}://{Context.Request.Host}{Url.Action("profile","account",new {name=Model.Name})}";
    
    var styleString = Model.IsHeaderUploaded == true ? $"background-image: url({urlHeader}); background-size: cover; background-repeat: no-repeat; background-position: center;": "background:#444444;";
} 

<div class="row" style="@styleString">
    <div class="col-md-2 col-12 p-5 text-center">
        <div style="object-fit:cover;">
        @if(!Model.IsAvatarUploaded)
        {
            <img class="rounded-circle" src="~/img/default_avatar.jpg" alt="Avatar Profile" style="width:120px; height:120px;">
        }
        else
        {
            <img class="rounded-circle" src="@urlAvatar" alt="Avatar Profile" style="width:120px; height:120px;">
        }
        </div>
    </div>
</div>

<div class="row mt-2">
    <div class="col-md-2 col-12 text-center">
        <strong style="color:@Model.Color;">@Model.Name</strong>
    </div>
        <div class="col-md-10 col-12 p-0 text-md-end text-center mt-md-0 mt-2">
        <div class="btn-group" role="group">
        @if (isAuthorized)
        {
            <button type="button" data-bs-toggle="modal" data-bs-target="#shareModal" class="btn btn-secondary mx-2 btn-sm btn-info text-start"><i class="bi bi-share-fill"></i> Share</button>
            <button type="button" data-bs-toggle="modal" data-bs-target="#editModal" class="btn btn-secondary mx-2 btn-sm btn-info text-start"><i class="bi bi-pencil-square"></i> Edit</button>
        }
        </div>
    </div>
</div>

<div class="row bg-secondary mt-3 p-2">

    @if (isAuthorized)
    {
        <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editModalLabel">Edit</h5>
                        <button type="button" class="close close-btn" data-bs-dismiss="modal" aria-label="Close"><span class="" aria-hidden="true">&times;</span></button>
                    </div>
                    <div class="modal-body">
                        <div class="col-12 mt-2">
                            <i class="bi bi-person-bounding-box"></i>
                            <a style="text-decoration: none;" asp-controller="account" asp-action="avatar" class="btn btn-link text-start" role="button">Avatar</a>
                        </div>
                        <div class="col-12 mt-2">
                            <i class="bi bi-image-alt"></i>
                            <a style="text-decoration: none;" asp-controller="account" asp-action="header" class="btn btn-link text-start" role="button">Header</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="shareModal" tabindex="-1" role="dialog" aria-labelledby="shareModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="shareModalLabel">Share</h5>
                        <button type="button" class="close close-btn" data-bs-dismiss="modal" aria-label="Close"><span class="" aria-hidden="true">&times;</span></button>
                    </div>
                    <div class="modal-body">
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <button class="btn btn-outline-secondary" onclick="copyText()" type="button">Copy</button>
                            </div>
                            <input type="text" class="form-control w-25" id="copyFuncion" readonly="readonly" value="@urlProfile">
                        </div>
                    <div id="textCopied" style="display:none;" class="text-success"><i class="bi bi-check-circle"></i> Url copied</div>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="col-12 col-md-3 mt-3 mt-md-0 text-center">
        <span><i class="bi bi-file-music-fill"></i> Tracks: @Model.TotalTracks</span>
    </div>
    <div class="col-12 col-md-3 mt-3 mt-md-0 text-center">
        <span><i class="bi bi-calendar-week-fill"></i> Joined: @Model.CreatedTime.ToString("d")</span>
    </div>
    <div class="col-12 col-md-3 mt-3 mt-md-0 text-center">
        <span><i class="bi bi-hdd-rack-fill"></i> @Math.Round(Model.TotalSizeOfTracks,2) MB free of @float.Parse(_configuration["SizeTracksLimit"]) MB</span>
    </div>
    <div class="col-12 col-md-3 mt-3 mt-md-0 text-center">
        <a asp-action="track" asp-controller="library" asp-route-guid="@_trackService.GetGuidTrackByTitle(Model.LastUpload).GetAwaiter().GetResult().ToString()" style="text-decoration: none;">
            <i class="bi bi-cloud-plus-fill"></i> Last upload: @Model.LastUpload
        </a>
    </div>
</div>

<div class="row">
    <div class="col-sm-12 col-md-6 col-lg-3 mt-3">
        <form method="get" asp-controller="@controllerName" asp-action="@acionName" asp-route-name="@Model.Name" autocomplete="off">
            <div class="input-group mb-3">
                <input id="search" type="text" name="search" class="form-control" placeholder="search">
                <div class="input-group-prepend">
                    <button id="searchSubmit" class="btn btn-success" type="submit">Search</button>
                    <a asp-controller="@controllerName" asp-action="@acionName" class="btn btn-warning" role="button">Clear</a>
                </div>
            </div>
        </form>
    </div>
</div>

@if(Model.Tracks is not null)
{
    <div class="row">
        @if(Model.Tracks is not null)
        {
            <div class="col-12" >
                <div class="table-responsive scrollable">
                    <table class="table text-nowrap">
                        <thead>
                            <tr>
                                <th scope="col">Name</th>
                                <th scope="col">Posted</th>
                                <th scope="col">Access</th>
                                <th scope="col">Type</th>
                                <th scope="col">Size</th>
                            </tr>
                        </thead>
                        <tbody>
                        @if (Model.Tracks is not null)
                        {
                            @foreach (var track in Model.Tracks)
                            {
                                if(track.TrackAccess.Equals(TrackAccess.Access[0]) && !isAuthorized && !isAdmin){continue;}
                                <tr>
                                    <td><a style="text-decoration: none;" asp-controller="library" asp-action="track" asp-route-guid="@track.Guid" class="btn btn-link pt-0">@track.Title</a></td>
                                        
                                    <th class="text-warning" scope="row">@track.DateTimeCreate</th>
                                       
                                    @if (track.TrackAccess.Equals(TrackAccess.Access[0]))
                                    {
                                        <th class="text-info" scope="row"><i class="bi bi-lock-fill"></i> @TrackAccess.Access[0]</th>
                                    }
                                    else if (track.TrackAccess.Equals(TrackAccess.Access[1]))
                                    {
                                        <th class="text-info" scope="row"><i class="bi bi-unlock-fill"></i> @TrackAccess.Access[1]</th>
                                    }
                                    else if(track.TrackAccess.Equals(TrackAccess.Access[2]))
                                    {
                                        <th class="text-info" scope="row"><i class="bi bi-globe"></i> @TrackAccess.Access[2]</th>
                                    }
                                    <th class="text-warning" scope="row">@track.Extension</th>
                                    <th class="text-warning" scope="row">@Math.Round(track.Size,2) MB</th>
                                </tr>
                            }
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    </div>
    <div class="row pagginationDiv">
        <div class="col-12 text-nowrap">
            <small>@Model.Tracks.Count of @Model.Tracks.TotalCount</small>
            <nav class="nav justify-content-center border-top border-white">
                <ul class="pagination mt-2">
                    <li class="page-item @Model.Tracks.PreviousDisabled()"><a class="page-link" asp-controller="@controllerName" asp-action="@acionName" asp-route-search="@urlQuery.Query["search"]" asp-route-pageNumber="@(Model.Tracks.PageIndex-1)">Previous</a></li>
                    @foreach (var item in Model.Tracks.Pages(1))
                    {
                        <li class="page-item @Model.Tracks.ActivePage(item)"><a class="page-link " asp-controller="@controllerName" asp-action="@acionName" asp-route-search="@urlQuery.Query["search"]" asp-route-pageNumber="@item">@item</a></li>
                    }
                    <li class="page-item @Model.Tracks.NextDisabled()"><a class="page-link" asp-controller="@controllerName" asp-action="@acionName" asp-route-search="@urlQuery.Query["search"]" asp-route-pageNumber="@(Model.Tracks.PageIndex+1)">Next</a></li>
                </ul>
            </nav>
        </div>
    </div>
}
else
{
    <partial name="_NoResultPartial"/>
}

@section Scripts{
    <script>
    function copyText(){
        const text = document.getElementById("copyFuncion");
        text.select();
        text.setSelectionRange(0, 99999);
        navigator.clipboard.writeText(text.value);
        document.getElementById("textCopied").style = "display:block";
        setTimeout(function(){
            document.getElementById("textCopied").style = "display:none";
        },3500);
    }
    </script>
}